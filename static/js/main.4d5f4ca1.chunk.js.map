{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","className","styles","container","defaultProps","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","nanoid","props","onSubmit","resetForm","form","this","label","type","input","onChange","pattern","title","required","buttonWrapper","button","Component","Filter","ContactItem","onDeleteContact","item","href","onClick","ContactList","contacts","list","map","App","filter","addContact","newContact","find","alert","changeFilter","filterContacts","normalizedFilter","toLowerCase","includes","deleteContact","prevState","filteredResults","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,cAAgB,mCAAmC,OAAS,8B,gBCArLD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,4BAA4B,OAAS,8B,qBCAlID,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mCCAxDD,EAAOC,QAAU,CAAC,UAAY,+B,iBCA9BD,EAAOC,QAAU,CAAC,KAAO,4B,sKCEnBC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,KAGrCD,EAAUK,aAAe,CACvBJ,SAAU,IAOGD,Q,gCCsEAM,E,4MA1EbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,cAAtBJ,EADgB,EAChBA,KAAMK,EADU,EACVA,MAEd,EAAKC,SAAL,eACGN,EAAOK,K,EAIZE,aAAe,SAACJ,GACdA,EAAMK,iBAEN,IAAMC,EAAU,CACdC,GAAIC,cACJX,KAAM,EAAKD,MAAMC,KACjBC,OAAQ,EAAKF,MAAME,QAGrB,EAAKW,MAAMC,SAASJ,GAEpB,EAAKK,a,EAGPA,UAAY,WACV,EAAKR,SAAS,CACZI,GAAI,GACJV,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,OACE,uBAAMP,UAAWC,IAAOoB,KAAMF,SAAUG,KAAKT,aAA7C,UACE,wBAAOb,UAAWC,IAAOsB,MAAzB,iBAEE,uBACEC,KAAK,OACLlB,KAAK,OACLN,UAAWC,IAAOwB,MAClBd,MAAOW,KAAKjB,MAAMC,KAClBoB,SAAUJ,KAAKd,aACfmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAO7B,UAAWC,IAAOsB,MAAzB,mBAEE,uBACEC,KAAK,MACLlB,KAAK,SACLN,UAAWC,IAAOwB,MAClBd,MAAOW,KAAKjB,MAAME,OAClBmB,SAAUJ,KAAKd,aACfmB,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,OAGZ,qBAAK7B,UAAWC,IAAO6B,cAAvB,SACE,wBAAQN,KAAK,SAASxB,UAAWC,IAAO8B,OAAxC,kC,GAtEgBC,a,gBCHpBC,EAAS,SAAC,GAAyB,IAAvBtB,EAAsB,EAAtBA,MAAOe,EAAe,EAAfA,SACvB,OACE,wBAAO1B,UAAWC,IAAOsB,MAAzB,kCAEE,uBACEC,KAAK,OACLlB,KAAK,SACLN,UAAWC,IAAOwB,MAClBd,MAAOA,EACPe,SAAUA,EACVC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,QAMhBI,EAAO9B,aAAe,CACpBQ,MAAO,IAQMsB,Q,gBCVAC,EAlBK,SAAC,GAAkC,IAAhCnB,EAA+B,EAA/BA,QAASoB,EAAsB,EAAtBA,gBAC9B,OACE,qBAAInC,UAAWC,IAAOmC,KAAtB,UACE,uBAAMpC,UAAWC,IAAOK,KAAxB,UAA+BS,EAAQT,KAAvC,QACA,mBAAG+B,KAAI,cAAStB,EAAQR,QAAUP,UAAWC,IAAOM,OAApD,SACGQ,EAAQR,SAEX,wBACEP,UAAWC,IAAO8B,OAClBP,KAAK,SACLc,QAAS,kBAAMH,EAAgBpB,EAAQC,KAHzC,wB,iBCoBSuB,EAzBK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUL,EAAsB,EAAtBA,gBAC/B,OACE,oBAAInC,UAAWC,IAAOwC,KAAtB,SACGD,EAASE,KAAI,SAAC3B,GAAD,OACZ,cAAC,EAAD,CACEA,QAASA,EACToB,gBAAiBA,GACZpB,EAAQC,U,iBC6DR2B,E,4MAhEbtC,MAAQ,CACNmC,SAAU,CACR,CAAExB,GAAI,OAAQV,KAAM,gBAAiBC,OAAQ,aAC7C,CAAES,GAAI,OAAQV,KAAM,iBAAkBC,OAAQ,aAC9C,CAAES,GAAI,OAAQV,KAAM,gBAAiBC,OAAQ,aAC7C,CAAES,GAAI,OAAQV,KAAM,iBAAkBC,OAAQ,cAEhDqC,OAAQ,I,EAGVC,WAAa,SAACC,GACU,EAAKzC,MAAMmC,SAASO,MACxC,SAAChC,GAAD,OAAaA,EAAQT,OAASwC,EAAWxC,QAIzC0C,MAAM,GAAD,OAAIF,EAAWxC,KAAf,4BAIP,EAAKM,UAAS,gBAAG4B,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEM,GAAH,mBAAkBN,S,EAI9BS,aAAe,SAACxC,GACd,EAAKG,SAAS,CAAEgC,OAAQnC,EAAMC,cAAcC,S,EAG9CuC,eAAiB,WAAO,IAAD,EACQ,EAAK7C,MAA1BmC,EADa,EACbA,SAEFW,EAHe,EACHP,OAEcQ,cAEhC,OAAOZ,EAASI,QAAO,SAAC7B,GAAD,OACrBA,EAAQT,KAAK8C,cAAcC,SAASF,O,EAIxCG,cAAgB,SAACtC,GACf,EAAKJ,UAAS,SAAC2C,GAAD,MAAgB,CAC5Bf,SAAUe,EAAUf,SAASI,QAAO,SAAC7B,GAAD,OAAaA,EAAQC,KAAOA,U,4CAIpE,WAAU,IACA4B,EAAWtB,KAAKjB,MAAhBuC,OACFY,EAAkBlC,KAAK4B,iBAE7B,OACE,eAAC,EAAD,WACE,oBAAIlD,UAAWC,IAAO2B,MAAtB,uBACA,cAAC,EAAD,CAAaT,SAAUG,KAAKuB,aAC5B,oBAAI7C,UAAWC,IAAO2B,MAAtB,sBACA,cAAC,EAAD,CAAQjB,MAAOiC,EAAQlB,SAAUJ,KAAK2B,eACtC,cAAC,EAAD,CACET,SAAUgB,EACVrB,gBAAiBb,KAAKgC,uB,GA1DdtB,aCFlByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4d5f4ca1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1OtEc\",\"label\":\"ContactForm_label__2s0Po\",\"input\":\"ContactForm_input__k823l\",\"buttonWrapper\":\"ContactForm_buttonWrapper__2GDb2\",\"button\":\"ContactForm_button__1EfJx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2_33H\",\"name\":\"ContactItem_name__1UFNX\",\"number\":\"ContactItem_number__1udN5\",\"button\":\"ContactItem_button__3Ibuz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__QOxU1\",\"input\":\"Filter_input__1WtUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Bbc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3f6t9\"};","import PropTypes from \"prop-types\";\nimport styles from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { nanoid } from \"nanoid\";\n\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const contact = {\n      id: nanoid(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(contact);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      id: \"\",\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={styles.input}\n            value={this.state.name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={styles.input}\n            value={this.state.number}\n            onChange={this.handleChange}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <div className={styles.buttonWrapper}>\n          <button type=\"submit\" className={styles.button}>\n            Add contact\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className={styles.input}\n        value={value}\n        onChange={onChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nFilter.defaultProps = {\n  value: \"\",\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styles from \"./ContactItem.module.css\";\n\nconst ContactItem = ({ contact, onDeleteContact }) => {\n  return (\n    <li className={styles.item}>\n      <span className={styles.name}>{contact.name}: </span>\n      <a href={`tel:${contact.number}`} className={styles.number}>\n        {contact.number}\n      </a>\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => onDeleteContact(contact.id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import PropTypes from \"prop-types\";\nimport ContactItem from \"../ContactItem\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map((contact) => (\n        <ContactItem\n          contact={contact}\n          onDeleteContact={onDeleteContact}\n          key={contact.id}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { Component } from \"react\";\nimport Container from \"./components/Container\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport styles from \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (newContact) => {\n    const duplicateName = this.state.contacts.find(\n      (contact) => contact.name === newContact.name\n    );\n\n    if (duplicateName) {\n      alert(`${newContact.name} is already on contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredResults = this.filterContacts();\n\n    return (\n      <Container>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2 className={styles.title}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredResults}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}